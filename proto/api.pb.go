// Code generated by protoc-gen-go.
// source: api.proto
// DO NOT EDIT!

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	api.proto

It has these top-level messages:
	Balance
	GetLogRequest
	GetLogResponse
	GetPortfolioRequest
	GetPortfolioResponse
	GetSimulationsRequest
	GetSimulationsResponse
	GetStatusRequest
	GetStatusResponse
	GetSymbolTypesRequest
	GetSymbolTypesResponse
	LogEntry
	Portfolio
	RebuildRequest
	RebuildResponse
	Simulation
	Strategy
	SymbolType
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type Balance struct {
	Symbol       string                     `protobuf:"bytes,1,opt,name=symbol" json:"symbol,omitempty"`
	Exchange     string                     `protobuf:"bytes,2,opt,name=exchange" json:"exchange,omitempty"`
	Free         float32                    `protobuf:"fixed32,3,opt,name=free" json:"free,omitempty"`
	Locked       float32                    `protobuf:"fixed32,4,opt,name=locked" json:"locked,omitempty"`
	Total        float32                    `protobuf:"fixed32,5,opt,name=total" json:"total,omitempty"`
	As           string                     `protobuf:"bytes,6,opt,name=as" json:"as,omitempty"`
	Price        float32                    `protobuf:"fixed32,7,opt,name=price" json:"price,omitempty"`
	Value        float32                    `protobuf:"fixed32,8,opt,name=value" json:"value,omitempty"`
	At           *google_protobuf.Timestamp `protobuf:"bytes,9,opt,name=at" json:"at,omitempty"`
	Price24H     float32                    `protobuf:"fixed32,10,opt,name=price24h" json:"price24h,omitempty"`
	Value24H     float32                    `protobuf:"fixed32,11,opt,name=value24h" json:"value24h,omitempty"`
	Change24H    float32                    `protobuf:"fixed32,12,opt,name=change24h" json:"change24h,omitempty"`
	ChangePct24H float32                    `protobuf:"fixed32,13,opt,name=changePct24h" json:"changePct24h,omitempty"`
	BuyStrategy  *Strategy                  `protobuf:"bytes,14,opt,name=buyStrategy" json:"buyStrategy,omitempty"`
	SellStrategy *Strategy                  `protobuf:"bytes,15,opt,name=sellStrategy" json:"sellStrategy,omitempty"`
}

func (m *Balance) Reset()                    { *m = Balance{} }
func (m *Balance) String() string            { return proto1.CompactTextString(m) }
func (*Balance) ProtoMessage()               {}
func (*Balance) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Balance) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *Balance) GetExchange() string {
	if m != nil {
		return m.Exchange
	}
	return ""
}

func (m *Balance) GetFree() float32 {
	if m != nil {
		return m.Free
	}
	return 0
}

func (m *Balance) GetLocked() float32 {
	if m != nil {
		return m.Locked
	}
	return 0
}

func (m *Balance) GetTotal() float32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *Balance) GetAs() string {
	if m != nil {
		return m.As
	}
	return ""
}

func (m *Balance) GetPrice() float32 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Balance) GetValue() float32 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *Balance) GetAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.At
	}
	return nil
}

func (m *Balance) GetPrice24H() float32 {
	if m != nil {
		return m.Price24H
	}
	return 0
}

func (m *Balance) GetValue24H() float32 {
	if m != nil {
		return m.Value24H
	}
	return 0
}

func (m *Balance) GetChange24H() float32 {
	if m != nil {
		return m.Change24H
	}
	return 0
}

func (m *Balance) GetChangePct24H() float32 {
	if m != nil {
		return m.ChangePct24H
	}
	return 0
}

func (m *Balance) GetBuyStrategy() *Strategy {
	if m != nil {
		return m.BuyStrategy
	}
	return nil
}

func (m *Balance) GetSellStrategy() *Strategy {
	if m != nil {
		return m.SellStrategy
	}
	return nil
}

type GetLogRequest struct {
}

func (m *GetLogRequest) Reset()                    { *m = GetLogRequest{} }
func (m *GetLogRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetLogRequest) ProtoMessage()               {}
func (*GetLogRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type GetLogResponse struct {
	Entries []*LogEntry `protobuf:"bytes,1,rep,name=entries" json:"entries,omitempty"`
}

func (m *GetLogResponse) Reset()                    { *m = GetLogResponse{} }
func (m *GetLogResponse) String() string            { return proto1.CompactTextString(m) }
func (*GetLogResponse) ProtoMessage()               {}
func (*GetLogResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *GetLogResponse) GetEntries() []*LogEntry {
	if m != nil {
		return m.Entries
	}
	return nil
}

type GetPortfolioRequest struct {
	As          string `protobuf:"bytes,1,opt,name=as" json:"as,omitempty"`
	IgnoreSmall bool   `protobuf:"varint,2,opt,name=ignoreSmall" json:"ignoreSmall,omitempty"`
}

func (m *GetPortfolioRequest) Reset()                    { *m = GetPortfolioRequest{} }
func (m *GetPortfolioRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetPortfolioRequest) ProtoMessage()               {}
func (*GetPortfolioRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *GetPortfolioRequest) GetAs() string {
	if m != nil {
		return m.As
	}
	return ""
}

func (m *GetPortfolioRequest) GetIgnoreSmall() bool {
	if m != nil {
		return m.IgnoreSmall
	}
	return false
}

type GetPortfolioResponse struct {
	Balances []*Balance `protobuf:"bytes,1,rep,name=balances" json:"balances,omitempty"`
}

func (m *GetPortfolioResponse) Reset()                    { *m = GetPortfolioResponse{} }
func (m *GetPortfolioResponse) String() string            { return proto1.CompactTextString(m) }
func (*GetPortfolioResponse) ProtoMessage()               {}
func (*GetPortfolioResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *GetPortfolioResponse) GetBalances() []*Balance {
	if m != nil {
		return m.Balances
	}
	return nil
}

type GetSimulationsRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *GetSimulationsRequest) Reset()                    { *m = GetSimulationsRequest{} }
func (m *GetSimulationsRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetSimulationsRequest) ProtoMessage()               {}
func (*GetSimulationsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *GetSimulationsRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetSimulationsResponse struct {
	Simulations []*Simulation `protobuf:"bytes,1,rep,name=simulations" json:"simulations,omitempty"`
}

func (m *GetSimulationsResponse) Reset()                    { *m = GetSimulationsResponse{} }
func (m *GetSimulationsResponse) String() string            { return proto1.CompactTextString(m) }
func (*GetSimulationsResponse) ProtoMessage()               {}
func (*GetSimulationsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *GetSimulationsResponse) GetSimulations() []*Simulation {
	if m != nil {
		return m.Simulations
	}
	return nil
}

type GetStatusRequest struct {
}

func (m *GetStatusRequest) Reset()                    { *m = GetStatusRequest{} }
func (m *GetStatusRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetStatusRequest) ProtoMessage()               {}
func (*GetStatusRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

type GetStatusResponse struct {
	ServerStarted *google_protobuf.Timestamp `protobuf:"bytes,1,opt,name=serverStarted" json:"serverStarted,omitempty"`
	LastUpdate    *google_protobuf.Timestamp `protobuf:"bytes,2,opt,name=lastUpdate" json:"lastUpdate,omitempty"`
	UpdateCount   int32                      `protobuf:"varint,3,opt,name=updateCount" json:"updateCount,omitempty"`
	TotalSymbols  int32                      `protobuf:"varint,4,opt,name=totalSymbols" json:"totalSymbols,omitempty"`
}

func (m *GetStatusResponse) Reset()                    { *m = GetStatusResponse{} }
func (m *GetStatusResponse) String() string            { return proto1.CompactTextString(m) }
func (*GetStatusResponse) ProtoMessage()               {}
func (*GetStatusResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *GetStatusResponse) GetServerStarted() *google_protobuf.Timestamp {
	if m != nil {
		return m.ServerStarted
	}
	return nil
}

func (m *GetStatusResponse) GetLastUpdate() *google_protobuf.Timestamp {
	if m != nil {
		return m.LastUpdate
	}
	return nil
}

func (m *GetStatusResponse) GetUpdateCount() int32 {
	if m != nil {
		return m.UpdateCount
	}
	return 0
}

func (m *GetStatusResponse) GetTotalSymbols() int32 {
	if m != nil {
		return m.TotalSymbols
	}
	return 0
}

type GetSymbolTypesRequest struct {
}

func (m *GetSymbolTypesRequest) Reset()                    { *m = GetSymbolTypesRequest{} }
func (m *GetSymbolTypesRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetSymbolTypesRequest) ProtoMessage()               {}
func (*GetSymbolTypesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

type GetSymbolTypesResponse struct {
	SymbolTypes []*SymbolType `protobuf:"bytes,1,rep,name=symbolTypes" json:"symbolTypes,omitempty"`
}

func (m *GetSymbolTypesResponse) Reset()                    { *m = GetSymbolTypesResponse{} }
func (m *GetSymbolTypesResponse) String() string            { return proto1.CompactTextString(m) }
func (*GetSymbolTypesResponse) ProtoMessage()               {}
func (*GetSymbolTypesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *GetSymbolTypesResponse) GetSymbolTypes() []*SymbolType {
	if m != nil {
		return m.SymbolTypes
	}
	return nil
}

type LogEntry struct {
	Time *google_protobuf.Timestamp `protobuf:"bytes,1,opt,name=time" json:"time,omitempty"`
	Text string                     `protobuf:"bytes,2,opt,name=text" json:"text,omitempty"`
}

func (m *LogEntry) Reset()                    { *m = LogEntry{} }
func (m *LogEntry) String() string            { return proto1.CompactTextString(m) }
func (*LogEntry) ProtoMessage()               {}
func (*LogEntry) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *LogEntry) GetTime() *google_protobuf.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *LogEntry) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

type Portfolio struct {
	Name     string     `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Balances []*Balance `protobuf:"bytes,2,rep,name=balances" json:"balances,omitempty"`
}

func (m *Portfolio) Reset()                    { *m = Portfolio{} }
func (m *Portfolio) String() string            { return proto1.CompactTextString(m) }
func (*Portfolio) ProtoMessage()               {}
func (*Portfolio) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *Portfolio) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Portfolio) GetBalances() []*Balance {
	if m != nil {
		return m.Balances
	}
	return nil
}

type RebuildRequest struct {
}

func (m *RebuildRequest) Reset()                    { *m = RebuildRequest{} }
func (m *RebuildRequest) String() string            { return proto1.CompactTextString(m) }
func (*RebuildRequest) ProtoMessage()               {}
func (*RebuildRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

type RebuildResponse struct {
	Result string `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
}

func (m *RebuildResponse) Reset()                    { *m = RebuildResponse{} }
func (m *RebuildResponse) String() string            { return proto1.CompactTextString(m) }
func (*RebuildResponse) ProtoMessage()               {}
func (*RebuildResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *RebuildResponse) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

type Simulation struct {
	UseHistoricalData bool                       `protobuf:"varint,1,opt,name=useHistoricalData" json:"useHistoricalData,omitempty"`
	FromTime          *google_protobuf.Timestamp `protobuf:"bytes,2,opt,name=fromTime" json:"fromTime,omitempty"`
	ToTime            *google_protobuf.Timestamp `protobuf:"bytes,3,opt,name=toTime" json:"toTime,omitempty"`
	DataFrequency     int32                      `protobuf:"varint,4,opt,name=dataFrequency" json:"dataFrequency,omitempty"`
	UseRealtimeData   bool                       `protobuf:"varint,5,opt,name=useRealtimeData" json:"useRealtimeData,omitempty"`
	Portfolio         *Portfolio                 `protobuf:"bytes,6,opt,name=portfolio" json:"portfolio,omitempty"`
}

func (m *Simulation) Reset()                    { *m = Simulation{} }
func (m *Simulation) String() string            { return proto1.CompactTextString(m) }
func (*Simulation) ProtoMessage()               {}
func (*Simulation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *Simulation) GetUseHistoricalData() bool {
	if m != nil {
		return m.UseHistoricalData
	}
	return false
}

func (m *Simulation) GetFromTime() *google_protobuf.Timestamp {
	if m != nil {
		return m.FromTime
	}
	return nil
}

func (m *Simulation) GetToTime() *google_protobuf.Timestamp {
	if m != nil {
		return m.ToTime
	}
	return nil
}

func (m *Simulation) GetDataFrequency() int32 {
	if m != nil {
		return m.DataFrequency
	}
	return 0
}

func (m *Simulation) GetUseRealtimeData() bool {
	if m != nil {
		return m.UseRealtimeData
	}
	return false
}

func (m *Simulation) GetPortfolio() *Portfolio {
	if m != nil {
		return m.Portfolio
	}
	return nil
}

type Strategy struct {
	Id          string  `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Description string  `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	CoinPercent float32 `protobuf:"fixed32,3,opt,name=coinPercent" json:"coinPercent,omitempty"`
	Symbol      string  `protobuf:"bytes,4,opt,name=symbol" json:"symbol,omitempty"`
	As          string  `protobuf:"bytes,5,opt,name=as" json:"as,omitempty"`
	IsRunning   bool    `protobuf:"varint,6,opt,name=isRunning" json:"isRunning,omitempty"`
}

func (m *Strategy) Reset()                    { *m = Strategy{} }
func (m *Strategy) String() string            { return proto1.CompactTextString(m) }
func (*Strategy) ProtoMessage()               {}
func (*Strategy) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *Strategy) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Strategy) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Strategy) GetCoinPercent() float32 {
	if m != nil {
		return m.CoinPercent
	}
	return 0
}

func (m *Strategy) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *Strategy) GetAs() string {
	if m != nil {
		return m.As
	}
	return ""
}

func (m *Strategy) GetIsRunning() bool {
	if m != nil {
		return m.IsRunning
	}
	return false
}

type SymbolType struct {
	Base string   `protobuf:"bytes,1,opt,name=base" json:"base,omitempty"`
	As   []string `protobuf:"bytes,2,rep,name=as" json:"as,omitempty"`
}

func (m *SymbolType) Reset()                    { *m = SymbolType{} }
func (m *SymbolType) String() string            { return proto1.CompactTextString(m) }
func (*SymbolType) ProtoMessage()               {}
func (*SymbolType) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *SymbolType) GetBase() string {
	if m != nil {
		return m.Base
	}
	return ""
}

func (m *SymbolType) GetAs() []string {
	if m != nil {
		return m.As
	}
	return nil
}

func init() {
	proto1.RegisterType((*Balance)(nil), "proto.Balance")
	proto1.RegisterType((*GetLogRequest)(nil), "proto.GetLogRequest")
	proto1.RegisterType((*GetLogResponse)(nil), "proto.GetLogResponse")
	proto1.RegisterType((*GetPortfolioRequest)(nil), "proto.GetPortfolioRequest")
	proto1.RegisterType((*GetPortfolioResponse)(nil), "proto.GetPortfolioResponse")
	proto1.RegisterType((*GetSimulationsRequest)(nil), "proto.GetSimulationsRequest")
	proto1.RegisterType((*GetSimulationsResponse)(nil), "proto.GetSimulationsResponse")
	proto1.RegisterType((*GetStatusRequest)(nil), "proto.GetStatusRequest")
	proto1.RegisterType((*GetStatusResponse)(nil), "proto.GetStatusResponse")
	proto1.RegisterType((*GetSymbolTypesRequest)(nil), "proto.GetSymbolTypesRequest")
	proto1.RegisterType((*GetSymbolTypesResponse)(nil), "proto.GetSymbolTypesResponse")
	proto1.RegisterType((*LogEntry)(nil), "proto.LogEntry")
	proto1.RegisterType((*Portfolio)(nil), "proto.Portfolio")
	proto1.RegisterType((*RebuildRequest)(nil), "proto.RebuildRequest")
	proto1.RegisterType((*RebuildResponse)(nil), "proto.RebuildResponse")
	proto1.RegisterType((*Simulation)(nil), "proto.Simulation")
	proto1.RegisterType((*Strategy)(nil), "proto.Strategy")
	proto1.RegisterType((*SymbolType)(nil), "proto.SymbolType")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Teletrada service

type TeletradaClient interface {
	// Get requests
	GetPortfolio(ctx context.Context, in *GetPortfolioRequest, opts ...grpc.CallOption) (*GetPortfolioResponse, error)
	GetSimulations(ctx context.Context, in *GetSimulationsRequest, opts ...grpc.CallOption) (*GetSimulationsResponse, error)
	GetLog(ctx context.Context, in *GetLogRequest, opts ...grpc.CallOption) (*GetLogResponse, error)
	GetStatus(ctx context.Context, in *GetStatusRequest, opts ...grpc.CallOption) (*GetStatusResponse, error)
	GetSymbolTypes(ctx context.Context, in *GetSymbolTypesRequest, opts ...grpc.CallOption) (*GetSymbolTypesResponse, error)
	// Rebuild server
	Rebuild(ctx context.Context, in *RebuildRequest, opts ...grpc.CallOption) (*RebuildResponse, error)
}

type teletradaClient struct {
	cc *grpc.ClientConn
}

func NewTeletradaClient(cc *grpc.ClientConn) TeletradaClient {
	return &teletradaClient{cc}
}

func (c *teletradaClient) GetPortfolio(ctx context.Context, in *GetPortfolioRequest, opts ...grpc.CallOption) (*GetPortfolioResponse, error) {
	out := new(GetPortfolioResponse)
	err := grpc.Invoke(ctx, "/proto.teletrada/GetPortfolio", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *teletradaClient) GetSimulations(ctx context.Context, in *GetSimulationsRequest, opts ...grpc.CallOption) (*GetSimulationsResponse, error) {
	out := new(GetSimulationsResponse)
	err := grpc.Invoke(ctx, "/proto.teletrada/GetSimulations", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *teletradaClient) GetLog(ctx context.Context, in *GetLogRequest, opts ...grpc.CallOption) (*GetLogResponse, error) {
	out := new(GetLogResponse)
	err := grpc.Invoke(ctx, "/proto.teletrada/GetLog", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *teletradaClient) GetStatus(ctx context.Context, in *GetStatusRequest, opts ...grpc.CallOption) (*GetStatusResponse, error) {
	out := new(GetStatusResponse)
	err := grpc.Invoke(ctx, "/proto.teletrada/GetStatus", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *teletradaClient) GetSymbolTypes(ctx context.Context, in *GetSymbolTypesRequest, opts ...grpc.CallOption) (*GetSymbolTypesResponse, error) {
	out := new(GetSymbolTypesResponse)
	err := grpc.Invoke(ctx, "/proto.teletrada/GetSymbolTypes", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *teletradaClient) Rebuild(ctx context.Context, in *RebuildRequest, opts ...grpc.CallOption) (*RebuildResponse, error) {
	out := new(RebuildResponse)
	err := grpc.Invoke(ctx, "/proto.teletrada/Rebuild", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Teletrada service

type TeletradaServer interface {
	// Get requests
	GetPortfolio(context.Context, *GetPortfolioRequest) (*GetPortfolioResponse, error)
	GetSimulations(context.Context, *GetSimulationsRequest) (*GetSimulationsResponse, error)
	GetLog(context.Context, *GetLogRequest) (*GetLogResponse, error)
	GetStatus(context.Context, *GetStatusRequest) (*GetStatusResponse, error)
	GetSymbolTypes(context.Context, *GetSymbolTypesRequest) (*GetSymbolTypesResponse, error)
	// Rebuild server
	Rebuild(context.Context, *RebuildRequest) (*RebuildResponse, error)
}

func RegisterTeletradaServer(s *grpc.Server, srv TeletradaServer) {
	s.RegisterService(&_Teletrada_serviceDesc, srv)
}

func _Teletrada_GetPortfolio_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPortfolioRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TeletradaServer).GetPortfolio(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.teletrada/GetPortfolio",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TeletradaServer).GetPortfolio(ctx, req.(*GetPortfolioRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Teletrada_GetSimulations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSimulationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TeletradaServer).GetSimulations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.teletrada/GetSimulations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TeletradaServer).GetSimulations(ctx, req.(*GetSimulationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Teletrada_GetLog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLogRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TeletradaServer).GetLog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.teletrada/GetLog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TeletradaServer).GetLog(ctx, req.(*GetLogRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Teletrada_GetStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TeletradaServer).GetStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.teletrada/GetStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TeletradaServer).GetStatus(ctx, req.(*GetStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Teletrada_GetSymbolTypes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSymbolTypesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TeletradaServer).GetSymbolTypes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.teletrada/GetSymbolTypes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TeletradaServer).GetSymbolTypes(ctx, req.(*GetSymbolTypesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Teletrada_Rebuild_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RebuildRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TeletradaServer).Rebuild(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.teletrada/Rebuild",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TeletradaServer).Rebuild(ctx, req.(*RebuildRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Teletrada_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.teletrada",
	HandlerType: (*TeletradaServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetPortfolio",
			Handler:    _Teletrada_GetPortfolio_Handler,
		},
		{
			MethodName: "GetSimulations",
			Handler:    _Teletrada_GetSimulations_Handler,
		},
		{
			MethodName: "GetLog",
			Handler:    _Teletrada_GetLog_Handler,
		},
		{
			MethodName: "GetStatus",
			Handler:    _Teletrada_GetStatus_Handler,
		},
		{
			MethodName: "GetSymbolTypes",
			Handler:    _Teletrada_GetSymbolTypes_Handler,
		},
		{
			MethodName: "Rebuild",
			Handler:    _Teletrada_Rebuild_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}

func init() { proto1.RegisterFile("api.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 969 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x55, 0x6d, 0x6f, 0xdb, 0x36,
	0x10, 0x9e, 0x9d, 0xd8, 0x91, 0xcf, 0x89, 0x9d, 0x70, 0x69, 0x2a, 0xa8, 0x1d, 0x56, 0x08, 0x03,
	0xd6, 0x16, 0x83, 0xda, 0x39, 0xc3, 0x06, 0x74, 0x5f, 0x8a, 0xec, 0xa5, 0x1d, 0xf6, 0x66, 0x28,
	0x1d, 0xf6, 0x99, 0x96, 0x19, 0x47, 0x18, 0x2d, 0x6a, 0x24, 0xd5, 0xc5, 0xff, 0x67, 0xd8, 0xd7,
	0xfd, 0x8e, 0xfd, 0x82, 0xfd, 0x9d, 0x91, 0x14, 0x45, 0x51, 0x76, 0xd6, 0xf6, 0x93, 0x79, 0xcf,
	0x3d, 0x77, 0xbe, 0x3b, 0x1e, 0x1f, 0xc1, 0x08, 0x97, 0x79, 0x52, 0x72, 0x26, 0x19, 0x1a, 0x98,
	0x9f, 0xe8, 0xc3, 0x15, 0x63, 0x2b, 0x4a, 0x9e, 0x18, 0x6b, 0x51, 0x5d, 0x3d, 0x91, 0xf9, 0x9a,
	0x08, 0x89, 0xd7, 0x65, 0xcd, 0x8b, 0xff, 0xd9, 0x83, 0x83, 0x0b, 0x4c, 0x71, 0x91, 0x11, 0x74,
	0x06, 0x43, 0xb1, 0x59, 0x2f, 0x18, 0x0d, 0x7b, 0x0f, 0x7a, 0x0f, 0x47, 0xa9, 0xb5, 0x50, 0x04,
	0x01, 0xb9, 0xc9, 0xae, 0x71, 0xb1, 0x22, 0x61, 0xdf, 0x78, 0x9c, 0x8d, 0x10, 0xec, 0x5f, 0x71,
	0x42, 0xc2, 0x3d, 0x85, 0xf7, 0x53, 0x73, 0xd6, 0x79, 0x28, 0xcb, 0x7e, 0x23, 0xcb, 0x70, 0xdf,
	0xa0, 0xd6, 0x42, 0xa7, 0x30, 0x90, 0x4c, 0x62, 0x1a, 0x0e, 0x0c, 0x5c, 0x1b, 0x68, 0x02, 0x7d,
	0x2c, 0xc2, 0xa1, 0xc9, 0xab, 0x4e, 0x9a, 0x55, 0xf2, 0x3c, 0x23, 0xe1, 0x41, 0xcd, 0x32, 0x86,
	0x46, 0x5f, 0x63, 0x5a, 0x91, 0x30, 0xa8, 0x51, 0x63, 0xa0, 0xc7, 0x2a, 0x56, 0x86, 0x23, 0x05,
	0x8d, 0x67, 0x51, 0x52, 0xf7, 0x9a, 0x34, 0xbd, 0x26, 0xaf, 0x9a, 0x5e, 0x55, 0x5e, 0xa9, 0xbb,
	0x30, 0xa9, 0x66, 0x9f, 0x5d, 0x87, 0x60, 0x92, 0x38, 0x5b, 0xfb, 0x4c, 0x42, 0xed, 0x1b, 0xd7,
	0xbe, 0xc6, 0x46, 0xf7, 0x61, 0x54, 0xf7, 0xaa, 0x9d, 0x87, 0xc6, 0xd9, 0x02, 0x28, 0x86, 0xc3,
	0xda, 0x98, 0x67, 0x52, 0x13, 0x8e, 0x0c, 0xa1, 0x83, 0xa1, 0x4f, 0x61, 0xbc, 0xa8, 0x36, 0x97,
	0x92, 0x63, 0x49, 0x56, 0x9b, 0x70, 0x62, 0xca, 0x9d, 0xd6, 0x75, 0x26, 0x0d, 0x9c, 0xfa, 0x1c,
	0x74, 0x0e, 0x87, 0x82, 0x50, 0xea, 0x62, 0xa6, 0xb7, 0xc7, 0x74, 0x48, 0xf1, 0x14, 0x8e, 0x5e,
	0x10, 0xf9, 0x03, 0x5b, 0xa5, 0xe4, 0xf7, 0x4a, 0x75, 0x1e, 0x7f, 0x09, 0x93, 0x06, 0x10, 0x25,
	0x2b, 0x04, 0x41, 0x8f, 0xe0, 0x80, 0x14, 0x92, 0xe7, 0x44, 0xa8, 0x3b, 0xde, 0xf3, 0x52, 0x2a,
	0xd2, 0x37, 0xca, 0xb1, 0x49, 0x1b, 0x7f, 0xfc, 0x02, 0xde, 0x57, 0xc1, 0x73, 0xc6, 0xe5, 0x15,
	0xa3, 0x39, 0xb3, 0x39, 0xed, 0x75, 0xf5, 0xdc, 0x75, 0x3d, 0x80, 0x71, 0xbe, 0x2a, 0x18, 0x27,
	0x97, 0x6b, 0x4c, 0xa9, 0xd9, 0x8f, 0x20, 0xf5, 0xa1, 0xf8, 0x02, 0x4e, 0xbb, 0x89, 0x6c, 0x2d,
	0x8f, 0x21, 0x58, 0xd4, 0x9b, 0xd7, 0x14, 0x33, 0xb1, 0xc5, 0xd8, 0x85, 0x4c, 0x9d, 0x3f, 0xfe,
	0x18, 0xee, 0xa8, 0x1c, 0x97, 0xf9, 0xba, 0xa2, 0x58, 0xe6, 0x2a, 0xdc, 0x2b, 0x27, 0x5f, 0x36,
	0xe5, 0xe4, 0xcb, 0xf8, 0x47, 0x38, 0xdb, 0x26, 0xda, 0xbf, 0x3b, 0x87, 0xb1, 0x68, 0x61, 0xfb,
	0x8f, 0x27, 0xcd, 0x44, 0x9d, 0x27, 0xf5, 0x59, 0x31, 0x82, 0x63, 0x9d, 0x4e, 0x62, 0x59, 0x35,
	0x7f, 0x19, 0xff, 0xdb, 0x83, 0x13, 0x0f, 0xb4, 0xe9, 0x9f, 0xc3, 0x91, 0x20, 0xfc, 0x35, 0xe1,
	0x0a, 0xe7, 0x92, 0xd4, 0x35, 0xbd, 0x79, 0x2b, 0xbb, 0x01, 0xe8, 0x19, 0x00, 0xc5, 0x42, 0xfe,
	0x52, 0x2e, 0xd5, 0x75, 0x9a, 0x41, 0xbe, 0x39, 0xdc, 0x63, 0xeb, 0x5b, 0xa8, 0xcc, 0xe9, 0x2b,
	0x56, 0x15, 0xd2, 0xbc, 0xc6, 0x41, 0xea, 0x43, 0x7a, 0x51, 0xcd, 0x7b, 0xbb, 0x34, 0x6f, 0x5a,
	0x98, 0xa7, 0x39, 0x48, 0x3b, 0x58, 0x7c, 0xb7, 0x9e, 0xb2, 0xb1, 0x5e, 0x6d, 0x4a, 0xe2, 0x5a,
	0xb6, 0x53, 0xf5, 0x1d, 0xde, 0x54, 0x5b, 0x78, 0x7b, 0xaa, 0xce, 0x93, 0xfa, 0xac, 0xf8, 0x27,
	0x08, 0x9a, 0x7d, 0x43, 0x09, 0xec, 0x6b, 0x4d, 0x7a, 0x87, 0x71, 0x19, 0x9e, 0x16, 0x1c, 0x49,
	0x6e, 0xa4, 0x15, 0x22, 0x73, 0x8e, 0xbf, 0x87, 0x91, 0x5b, 0x2f, 0x4d, 0x28, 0xb0, 0x4d, 0xa8,
	0x08, 0xfa, 0xdc, 0x59, 0xb5, 0xfe, 0x5b, 0x56, 0xed, 0x18, 0x26, 0x29, 0x59, 0x54, 0x39, 0x5d,
	0x36, 0xdd, 0x3f, 0x82, 0xa9, 0x43, 0x6c, 0xdb, 0x4a, 0xe2, 0x38, 0x11, 0x15, 0x95, 0x8d, 0x54,
	0xd6, 0x56, 0xfc, 0x57, 0x1f, 0xa0, 0xdd, 0x25, 0xf4, 0x09, 0x9c, 0x54, 0x82, 0xbc, 0xcc, 0x85,
	0x64, 0x4a, 0x6a, 0x30, 0xfd, 0x1a, 0x4b, 0x6c, 0x22, 0x82, 0x74, 0xd7, 0x81, 0x3e, 0x87, 0xe0,
	0x8a, 0xb3, 0xb5, 0xee, 0xf8, 0x1d, 0xae, 0xdf, 0x71, 0xd1, 0x0c, 0x86, 0x92, 0x99, 0xa8, 0xbd,
	0xb7, 0x46, 0x59, 0x26, 0xfa, 0x08, 0x8e, 0xd4, 0x6e, 0xe0, 0x6f, 0xb9, 0xee, 0xb1, 0xc8, 0x36,
	0x76, 0x1f, 0xba, 0x20, 0x7a, 0x08, 0x53, 0x55, 0x66, 0x4a, 0x30, 0xd5, 0xb3, 0x37, 0xd5, 0x0f,
	0x4c, 0xf5, 0xdb, 0xb0, 0xba, 0xc6, 0x51, 0xd9, 0x5c, 0x81, 0x11, 0xf3, 0xf1, 0xec, 0xd8, 0x8e,
	0xb8, 0x7d, 0xf9, 0x2d, 0x25, 0xfe, 0xb3, 0x07, 0x81, 0x53, 0xbb, 0xad, 0x47, 0xac, 0xb7, 0x79,
	0x49, 0x44, 0xc6, 0xf3, 0x52, 0x4f, 0xd1, 0x5e, 0xb5, 0x0f, 0x69, 0x46, 0xc6, 0xf2, 0x62, 0x4e,
	0x78, 0x46, 0xec, 0xbe, 0xf7, 0x53, 0x1f, 0xf2, 0x3e, 0x66, 0xfb, 0x9d, 0x8f, 0x59, 0xad, 0x5f,
	0x03, 0xa7, 0x5f, 0x4a, 0xde, 0x73, 0x91, 0x56, 0x45, 0x91, 0x17, 0x2b, 0x53, 0x78, 0x90, 0xb6,
	0x40, 0xfc, 0x54, 0x5d, 0xa7, 0x5b, 0x5c, 0xbd, 0x5a, 0x0b, 0x2c, 0xdc, 0x6a, 0xe9, 0xb3, 0xcd,
	0xa7, 0x97, 0xca, 0xe4, 0x9b, 0xfd, 0xbd, 0x07, 0x23, 0x49, 0x28, 0x51, 0xbd, 0x2d, 0x31, 0xfa,
	0x0e, 0x0e, 0x7d, 0xed, 0x43, 0x91, 0x9d, 0xc9, 0x2d, 0xca, 0x1a, 0xdd, 0xbb, 0xd5, 0x57, 0x2f,
	0x5c, 0xfc, 0x1e, 0xfa, 0xd9, 0x88, 0xb9, 0xa7, 0x6c, 0xe8, 0x7e, 0x1b, 0xb0, 0xab, 0x8c, 0xd1,
	0x07, 0xff, 0xe3, 0x75, 0x09, 0xbf, 0x80, 0x61, 0xfd, 0x75, 0x40, 0xa7, 0x2d, 0xb5, 0xfd, 0x7a,
	0x44, 0x77, 0xb6, 0x50, 0x17, 0xf8, 0x1c, 0x46, 0x4e, 0xff, 0xd0, 0x5d, 0xef, 0x6f, 0x7c, 0x99,
	0x8c, 0xc2, 0x5d, 0xc7, 0x76, 0x2f, 0xad, 0x24, 0x74, 0x7a, 0xd9, 0xd1, 0x9f, 0x4e, 0x2f, 0xbb,
	0x22, 0xa4, 0x12, 0x3e, 0x83, 0x03, 0xfb, 0x44, 0x51, 0x53, 0x76, 0xf7, 0x11, 0x47, 0x67, 0xdb,
	0x70, 0x13, 0x7b, 0xf1, 0x14, 0xee, 0xe5, 0x2c, 0x59, 0xf1, 0x32, 0x4b, 0xc8, 0x8d, 0x7a, 0x23,
	0x94, 0x88, 0xe4, 0x5a, 0x7d, 0x57, 0xd9, 0x1f, 0x8c, 0xd3, 0xe5, 0xc5, 0xf4, 0xa5, 0x3e, 0xff,
	0xaa, 0xcf, 0x73, 0x9d, 0x61, 0xde, 0x5b, 0x0c, 0x4d, 0xaa, 0xf3, 0xff, 0x02, 0x00, 0x00, 0xff,
	0xff, 0x20, 0x39, 0x17, 0x77, 0x70, 0x09, 0x00, 0x00,
}
