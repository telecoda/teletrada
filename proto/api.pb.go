// Code generated by protoc-gen-go.
// source: api.proto
// DO NOT EDIT!

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	api.proto

It has these top-level messages:
	BalancesRequest
	Balance
	BalancesResponse
	LogRequest
	LogEntry
	LogResponse
	RebuildRequest
	RebuildResponse
	StatusRequest
	StatusResponse
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type BalancesRequest struct {
	As          string `protobuf:"bytes,1,opt,name=as" json:"as,omitempty"`
	IgnoreSmall bool   `protobuf:"varint,2,opt,name=ignoreSmall" json:"ignoreSmall,omitempty"`
}

func (m *BalancesRequest) Reset()                    { *m = BalancesRequest{} }
func (m *BalancesRequest) String() string            { return proto1.CompactTextString(m) }
func (*BalancesRequest) ProtoMessage()               {}
func (*BalancesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *BalancesRequest) GetAs() string {
	if m != nil {
		return m.As
	}
	return ""
}

func (m *BalancesRequest) GetIgnoreSmall() bool {
	if m != nil {
		return m.IgnoreSmall
	}
	return false
}

type Balance struct {
	Symbol       string                     `protobuf:"bytes,1,opt,name=symbol" json:"symbol,omitempty"`
	Exchange     string                     `protobuf:"bytes,2,opt,name=exchange" json:"exchange,omitempty"`
	Free         float32                    `protobuf:"fixed32,3,opt,name=free" json:"free,omitempty"`
	Locked       float32                    `protobuf:"fixed32,4,opt,name=locked" json:"locked,omitempty"`
	Total        float32                    `protobuf:"fixed32,5,opt,name=total" json:"total,omitempty"`
	As           string                     `protobuf:"bytes,6,opt,name=as" json:"as,omitempty"`
	Price        float32                    `protobuf:"fixed32,7,opt,name=price" json:"price,omitempty"`
	Value        float32                    `protobuf:"fixed32,8,opt,name=value" json:"value,omitempty"`
	At           *google_protobuf.Timestamp `protobuf:"bytes,9,opt,name=at" json:"at,omitempty"`
	Price24H     float32                    `protobuf:"fixed32,10,opt,name=price24h" json:"price24h,omitempty"`
	Value24H     float32                    `protobuf:"fixed32,11,opt,name=value24h" json:"value24h,omitempty"`
	Change24H    float32                    `protobuf:"fixed32,12,opt,name=change24h" json:"change24h,omitempty"`
	ChangePct24H float32                    `protobuf:"fixed32,13,opt,name=changePct24h" json:"changePct24h,omitempty"`
}

func (m *Balance) Reset()                    { *m = Balance{} }
func (m *Balance) String() string            { return proto1.CompactTextString(m) }
func (*Balance) ProtoMessage()               {}
func (*Balance) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Balance) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *Balance) GetExchange() string {
	if m != nil {
		return m.Exchange
	}
	return ""
}

func (m *Balance) GetFree() float32 {
	if m != nil {
		return m.Free
	}
	return 0
}

func (m *Balance) GetLocked() float32 {
	if m != nil {
		return m.Locked
	}
	return 0
}

func (m *Balance) GetTotal() float32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *Balance) GetAs() string {
	if m != nil {
		return m.As
	}
	return ""
}

func (m *Balance) GetPrice() float32 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Balance) GetValue() float32 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *Balance) GetAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.At
	}
	return nil
}

func (m *Balance) GetPrice24H() float32 {
	if m != nil {
		return m.Price24H
	}
	return 0
}

func (m *Balance) GetValue24H() float32 {
	if m != nil {
		return m.Value24H
	}
	return 0
}

func (m *Balance) GetChange24H() float32 {
	if m != nil {
		return m.Change24H
	}
	return 0
}

func (m *Balance) GetChangePct24H() float32 {
	if m != nil {
		return m.ChangePct24H
	}
	return 0
}

type BalancesResponse struct {
	Balances []*Balance `protobuf:"bytes,1,rep,name=balances" json:"balances,omitempty"`
}

func (m *BalancesResponse) Reset()                    { *m = BalancesResponse{} }
func (m *BalancesResponse) String() string            { return proto1.CompactTextString(m) }
func (*BalancesResponse) ProtoMessage()               {}
func (*BalancesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *BalancesResponse) GetBalances() []*Balance {
	if m != nil {
		return m.Balances
	}
	return nil
}

type LogRequest struct {
}

func (m *LogRequest) Reset()                    { *m = LogRequest{} }
func (m *LogRequest) String() string            { return proto1.CompactTextString(m) }
func (*LogRequest) ProtoMessage()               {}
func (*LogRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type LogEntry struct {
	Time *google_protobuf.Timestamp `protobuf:"bytes,1,opt,name=time" json:"time,omitempty"`
	Text string                     `protobuf:"bytes,2,opt,name=text" json:"text,omitempty"`
}

func (m *LogEntry) Reset()                    { *m = LogEntry{} }
func (m *LogEntry) String() string            { return proto1.CompactTextString(m) }
func (*LogEntry) ProtoMessage()               {}
func (*LogEntry) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *LogEntry) GetTime() *google_protobuf.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *LogEntry) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

type LogResponse struct {
	Entries []*LogEntry `protobuf:"bytes,1,rep,name=entries" json:"entries,omitempty"`
}

func (m *LogResponse) Reset()                    { *m = LogResponse{} }
func (m *LogResponse) String() string            { return proto1.CompactTextString(m) }
func (*LogResponse) ProtoMessage()               {}
func (*LogResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *LogResponse) GetEntries() []*LogEntry {
	if m != nil {
		return m.Entries
	}
	return nil
}

type RebuildRequest struct {
}

func (m *RebuildRequest) Reset()                    { *m = RebuildRequest{} }
func (m *RebuildRequest) String() string            { return proto1.CompactTextString(m) }
func (*RebuildRequest) ProtoMessage()               {}
func (*RebuildRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type RebuildResponse struct {
	Result string `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
}

func (m *RebuildResponse) Reset()                    { *m = RebuildResponse{} }
func (m *RebuildResponse) String() string            { return proto1.CompactTextString(m) }
func (*RebuildResponse) ProtoMessage()               {}
func (*RebuildResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *RebuildResponse) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

type StatusRequest struct {
}

func (m *StatusRequest) Reset()                    { *m = StatusRequest{} }
func (m *StatusRequest) String() string            { return proto1.CompactTextString(m) }
func (*StatusRequest) ProtoMessage()               {}
func (*StatusRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

type StatusResponse struct {
	ServerStarted *google_protobuf.Timestamp `protobuf:"bytes,1,opt,name=serverStarted" json:"serverStarted,omitempty"`
	LastUpdate    *google_protobuf.Timestamp `protobuf:"bytes,2,opt,name=lastUpdate" json:"lastUpdate,omitempty"`
	UpdateCount   int32                      `protobuf:"varint,3,opt,name=updateCount" json:"updateCount,omitempty"`
	TotalSymbols  int32                      `protobuf:"varint,4,opt,name=totalSymbols" json:"totalSymbols,omitempty"`
}

func (m *StatusResponse) Reset()                    { *m = StatusResponse{} }
func (m *StatusResponse) String() string            { return proto1.CompactTextString(m) }
func (*StatusResponse) ProtoMessage()               {}
func (*StatusResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *StatusResponse) GetServerStarted() *google_protobuf.Timestamp {
	if m != nil {
		return m.ServerStarted
	}
	return nil
}

func (m *StatusResponse) GetLastUpdate() *google_protobuf.Timestamp {
	if m != nil {
		return m.LastUpdate
	}
	return nil
}

func (m *StatusResponse) GetUpdateCount() int32 {
	if m != nil {
		return m.UpdateCount
	}
	return 0
}

func (m *StatusResponse) GetTotalSymbols() int32 {
	if m != nil {
		return m.TotalSymbols
	}
	return 0
}

func init() {
	proto1.RegisterType((*BalancesRequest)(nil), "proto.BalancesRequest")
	proto1.RegisterType((*Balance)(nil), "proto.Balance")
	proto1.RegisterType((*BalancesResponse)(nil), "proto.BalancesResponse")
	proto1.RegisterType((*LogRequest)(nil), "proto.LogRequest")
	proto1.RegisterType((*LogEntry)(nil), "proto.LogEntry")
	proto1.RegisterType((*LogResponse)(nil), "proto.LogResponse")
	proto1.RegisterType((*RebuildRequest)(nil), "proto.RebuildRequest")
	proto1.RegisterType((*RebuildResponse)(nil), "proto.RebuildResponse")
	proto1.RegisterType((*StatusRequest)(nil), "proto.StatusRequest")
	proto1.RegisterType((*StatusResponse)(nil), "proto.StatusResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Teletrada service

type TeletradaClient interface {
	// Get current balances
	GetBalances(ctx context.Context, in *BalancesRequest, opts ...grpc.CallOption) (*BalancesResponse, error)
	GetLog(ctx context.Context, in *LogRequest, opts ...grpc.CallOption) (*LogResponse, error)
	GetStatus(ctx context.Context, in *StatusRequest, opts ...grpc.CallOption) (*StatusResponse, error)
	Rebuild(ctx context.Context, in *RebuildRequest, opts ...grpc.CallOption) (*RebuildResponse, error)
}

type teletradaClient struct {
	cc *grpc.ClientConn
}

func NewTeletradaClient(cc *grpc.ClientConn) TeletradaClient {
	return &teletradaClient{cc}
}

func (c *teletradaClient) GetBalances(ctx context.Context, in *BalancesRequest, opts ...grpc.CallOption) (*BalancesResponse, error) {
	out := new(BalancesResponse)
	err := grpc.Invoke(ctx, "/proto.teletrada/GetBalances", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *teletradaClient) GetLog(ctx context.Context, in *LogRequest, opts ...grpc.CallOption) (*LogResponse, error) {
	out := new(LogResponse)
	err := grpc.Invoke(ctx, "/proto.teletrada/GetLog", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *teletradaClient) GetStatus(ctx context.Context, in *StatusRequest, opts ...grpc.CallOption) (*StatusResponse, error) {
	out := new(StatusResponse)
	err := grpc.Invoke(ctx, "/proto.teletrada/GetStatus", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *teletradaClient) Rebuild(ctx context.Context, in *RebuildRequest, opts ...grpc.CallOption) (*RebuildResponse, error) {
	out := new(RebuildResponse)
	err := grpc.Invoke(ctx, "/proto.teletrada/Rebuild", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Teletrada service

type TeletradaServer interface {
	// Get current balances
	GetBalances(context.Context, *BalancesRequest) (*BalancesResponse, error)
	GetLog(context.Context, *LogRequest) (*LogResponse, error)
	GetStatus(context.Context, *StatusRequest) (*StatusResponse, error)
	Rebuild(context.Context, *RebuildRequest) (*RebuildResponse, error)
}

func RegisterTeletradaServer(s *grpc.Server, srv TeletradaServer) {
	s.RegisterService(&_Teletrada_serviceDesc, srv)
}

func _Teletrada_GetBalances_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BalancesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TeletradaServer).GetBalances(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.teletrada/GetBalances",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TeletradaServer).GetBalances(ctx, req.(*BalancesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Teletrada_GetLog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LogRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TeletradaServer).GetLog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.teletrada/GetLog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TeletradaServer).GetLog(ctx, req.(*LogRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Teletrada_GetStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TeletradaServer).GetStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.teletrada/GetStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TeletradaServer).GetStatus(ctx, req.(*StatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Teletrada_Rebuild_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RebuildRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TeletradaServer).Rebuild(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.teletrada/Rebuild",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TeletradaServer).Rebuild(ctx, req.(*RebuildRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Teletrada_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.teletrada",
	HandlerType: (*TeletradaServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetBalances",
			Handler:    _Teletrada_GetBalances_Handler,
		},
		{
			MethodName: "GetLog",
			Handler:    _Teletrada_GetLog_Handler,
		},
		{
			MethodName: "GetStatus",
			Handler:    _Teletrada_GetStatus_Handler,
		},
		{
			MethodName: "Rebuild",
			Handler:    _Teletrada_Rebuild_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}

func init() { proto1.RegisterFile("api.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 610 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x84, 0x53, 0x4f, 0x6f, 0xd3, 0x4e,
	0x10, 0xfd, 0x25, 0x6d, 0xfe, 0x78, 0xd2, 0x26, 0xfd, 0xad, 0x4a, 0xb1, 0x0c, 0x12, 0x95, 0x4f,
	0x94, 0x83, 0x0b, 0x85, 0x03, 0xea, 0x01, 0xa1, 0x56, 0x08, 0x0e, 0x08, 0x55, 0x2e, 0x88, 0xf3,
	0xc6, 0x99, 0xba, 0x16, 0x1b, 0xaf, 0x59, 0xaf, 0x4b, 0xfa, 0x3d, 0xf9, 0x02, 0x7c, 0x0b, 0x8e,
	0xec, 0x5f, 0x27, 0x2e, 0x52, 0x39, 0x65, 0xde, 0x9b, 0x99, 0x97, 0xd9, 0x79, 0x63, 0x08, 0x68,
	0x55, 0x24, 0x95, 0xe0, 0x92, 0x93, 0x81, 0xf9, 0x89, 0x9e, 0xe4, 0x9c, 0xe7, 0x0c, 0x8f, 0x0d,
	0x9a, 0x37, 0x57, 0xc7, 0xb2, 0x58, 0x62, 0x2d, 0xe9, 0xb2, 0xb2, 0x75, 0xf1, 0x39, 0xcc, 0xce,
	0x28, 0xa3, 0x65, 0x86, 0x75, 0x8a, 0xdf, 0x1b, 0x95, 0x23, 0x53, 0xe8, 0xd3, 0x3a, 0xec, 0x1d,
	0xf6, 0x9e, 0x06, 0xa9, 0x8a, 0xc8, 0x21, 0x4c, 0x8a, 0xbc, 0xe4, 0x02, 0x2f, 0x97, 0x94, 0xb1,
	0xb0, 0xaf, 0x12, 0xe3, 0x74, 0x93, 0x8a, 0x7f, 0xf5, 0x61, 0xe4, 0x54, 0xc8, 0x01, 0x0c, 0xeb,
	0xdb, 0xe5, 0x9c, 0x33, 0xa7, 0xe0, 0x10, 0x89, 0x60, 0x8c, 0xab, 0xec, 0x9a, 0x96, 0x39, 0x1a,
	0x89, 0x20, 0x6d, 0x31, 0x21, 0xb0, 0x7d, 0x25, 0x10, 0xc3, 0x2d, 0xc5, 0xf7, 0x53, 0x13, 0x6b,
	0x1d, 0xc6, 0xb3, 0x6f, 0xb8, 0x08, 0xb7, 0x0d, 0xeb, 0x10, 0xd9, 0x87, 0x81, 0xe4, 0x92, 0xb2,
	0x70, 0x60, 0x68, 0x0b, 0xdc, 0xcc, 0xc3, 0x76, 0x66, 0x55, 0x55, 0x89, 0x22, 0xc3, 0x70, 0x64,
	0xab, 0x0c, 0xd0, 0xec, 0x0d, 0x65, 0x0d, 0x86, 0x63, 0xcb, 0x1a, 0x40, 0x9e, 0xa9, 0x5e, 0x19,
	0x06, 0x8a, 0x9a, 0x9c, 0x44, 0x89, 0x5d, 0x58, 0xe2, 0x17, 0x96, 0x7c, 0xf6, 0x0b, 0x53, 0xba,
	0x52, 0xbf, 0xc2, 0x48, 0x9d, 0xbc, 0xba, 0x0e, 0xc1, 0x88, 0xb4, 0x58, 0xe7, 0x8c, 0xa0, 0xce,
	0x4d, 0x6c, 0xce, 0x63, 0xf2, 0x18, 0x02, 0xfb, 0x56, 0x9d, 0xdc, 0x31, 0xc9, 0x35, 0x41, 0x62,
	0xd8, 0xb1, 0xe0, 0x22, 0x93, 0xba, 0x60, 0xd7, 0x14, 0x74, 0xb8, 0xf8, 0x0d, 0xec, 0xad, 0x8d,
	0xaa, 0x2b, 0x5e, 0xd6, 0x7a, 0xf2, 0xf1, 0xdc, 0x71, 0x6a, 0xdb, 0x5b, 0x6a, 0xfe, 0xa9, 0x1d,
	0x3c, 0x71, 0xa5, 0x69, 0x9b, 0x8f, 0x77, 0x00, 0x3e, 0xf2, 0xdc, 0x79, 0x1c, 0x7f, 0x82, 0xb1,
	0x42, 0xef, 0x4a, 0x29, 0x6e, 0x49, 0x02, 0xdb, 0xfa, 0x2a, 0x8c, 0x5f, 0xf7, 0x6f, 0xc0, 0xd4,
	0x69, 0xb7, 0x24, 0xae, 0xa4, 0x73, 0xd1, 0xc4, 0xf1, 0x6b, 0x98, 0x18, 0x75, 0x37, 0xd8, 0x11,
	0x8c, 0x50, 0x69, 0x17, 0xed, 0x5c, 0x33, 0x37, 0x97, 0xff, 0xd3, 0xd4, 0xe7, 0xe3, 0x3d, 0x98,
	0xa6, 0x38, 0x6f, 0x0a, 0xb6, 0xf0, 0xb3, 0x1d, 0xc1, 0xac, 0x65, 0x9c, 0x9e, 0x3a, 0x06, 0x81,
	0x75, 0xc3, 0xa4, 0x3f, 0x2a, 0x8b, 0xe2, 0x19, 0xec, 0x5e, 0x4a, 0x2a, 0x1b, 0x7f, 0xbb, 0xf1,
	0xcf, 0x1e, 0x4c, 0x3d, 0xe3, 0x7a, 0xdf, 0xc2, 0x6e, 0x8d, 0xe2, 0x06, 0x85, 0xe2, 0x85, 0x54,
	0xf7, 0xf4, 0xef, 0x77, 0x76, 0x1b, 0xc8, 0x29, 0x00, 0xa3, 0xb5, 0xfc, 0x52, 0x2d, 0xa8, 0xb4,
	0xc7, 0x7b, 0x7f, 0xfb, 0x46, 0xb5, 0xfe, 0x78, 0x1a, 0x13, 0x9d, 0xf3, 0xa6, 0x94, 0xe6, 0xc2,
	0x07, 0xe9, 0x26, 0xa5, 0xcd, 0x37, 0x37, 0x7c, 0x69, 0xbe, 0x93, 0xda, 0x9c, 0xfb, 0x20, 0xed,
	0x70, 0x27, 0xbf, 0x7b, 0x10, 0x48, 0x64, 0x28, 0x05, 0x5d, 0x50, 0xf5, 0xa2, 0xc9, 0x7b, 0x94,
	0xfe, 0x1a, 0xc8, 0x41, 0xd7, 0x73, 0xbf, 0x8b, 0xe8, 0xe1, 0x5f, 0xbc, 0xdd, 0x48, 0xfc, 0x1f,
	0x79, 0x01, 0x43, 0xa5, 0xa0, 0xcc, 0x20, 0xff, 0xaf, 0x8d, 0xf1, 0x7d, 0x64, 0x93, 0x6a, 0x5b,
	0x4e, 0x21, 0x50, 0x2d, 0x76, 0xb7, 0x64, 0xdf, 0x95, 0x74, 0x96, 0x1f, 0x3d, 0xb8, 0xc3, 0x6e,
	0xf4, 0x8e, 0x9c, 0xa3, 0xc4, 0xd7, 0x74, 0x3d, 0x8f, 0x0e, 0xee, 0xd2, 0xbe, 0xf7, 0xec, 0x39,
	0x3c, 0x2a, 0x78, 0x92, 0x8b, 0x2a, 0x4b, 0x70, 0xa5, 0xb6, 0xcb, 0xb0, 0x4e, 0xae, 0x91, 0x31,
	0xfe, 0x83, 0x0b, 0xb6, 0x38, 0x9b, 0x7d, 0xd0, 0xf1, 0x57, 0x1d, 0x5f, 0x68, 0x85, 0x8b, 0xde,
	0x7c, 0x68, 0xa4, 0x5e, 0xfe, 0x09, 0x00, 0x00, 0xff, 0xff, 0xf5, 0xd6, 0xc6, 0xee, 0x0e, 0x05,
	0x00, 0x00,
}
