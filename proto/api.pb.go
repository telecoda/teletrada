// Code generated by protoc-gen-go.
// source: api.proto
// DO NOT EDIT!

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	api.proto

It has these top-level messages:
	BalancesRequest
	Balance
	BalancesResponse
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type BalancesRequest struct {
	IgnoreSmall bool `protobuf:"varint,1,opt,name=ignoreSmall" json:"ignoreSmall,omitempty"`
}

func (m *BalancesRequest) Reset()                    { *m = BalancesRequest{} }
func (m *BalancesRequest) String() string            { return proto1.CompactTextString(m) }
func (*BalancesRequest) ProtoMessage()               {}
func (*BalancesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *BalancesRequest) GetIgnoreSmall() bool {
	if m != nil {
		return m.IgnoreSmall
	}
	return false
}

type Balance struct {
	Symbol string  `protobuf:"bytes,1,opt,name=symbol" json:"symbol,omitempty"`
	Total  float32 `protobuf:"fixed32,2,opt,name=total" json:"total,omitempty"`
}

func (m *Balance) Reset()                    { *m = Balance{} }
func (m *Balance) String() string            { return proto1.CompactTextString(m) }
func (*Balance) ProtoMessage()               {}
func (*Balance) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Balance) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *Balance) GetTotal() float32 {
	if m != nil {
		return m.Total
	}
	return 0
}

type BalancesResponse struct {
	Message string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
}

func (m *BalancesResponse) Reset()                    { *m = BalancesResponse{} }
func (m *BalancesResponse) String() string            { return proto1.CompactTextString(m) }
func (*BalancesResponse) ProtoMessage()               {}
func (*BalancesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *BalancesResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto1.RegisterType((*BalancesRequest)(nil), "proto.BalancesRequest")
	proto1.RegisterType((*Balance)(nil), "proto.Balance")
	proto1.RegisterType((*BalancesResponse)(nil), "proto.BalancesResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Trader service

type TraderClient interface {
	// Get current balances
	GetBalances(ctx context.Context, in *BalancesRequest, opts ...grpc.CallOption) (*BalancesResponse, error)
}

type traderClient struct {
	cc *grpc.ClientConn
}

func NewTraderClient(cc *grpc.ClientConn) TraderClient {
	return &traderClient{cc}
}

func (c *traderClient) GetBalances(ctx context.Context, in *BalancesRequest, opts ...grpc.CallOption) (*BalancesResponse, error) {
	out := new(BalancesResponse)
	err := grpc.Invoke(ctx, "/proto.trader/GetBalances", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Trader service

type TraderServer interface {
	// Get current balances
	GetBalances(context.Context, *BalancesRequest) (*BalancesResponse, error)
}

func RegisterTraderServer(s *grpc.Server, srv TraderServer) {
	s.RegisterService(&_Trader_serviceDesc, srv)
}

func _Trader_GetBalances_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BalancesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TraderServer).GetBalances(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.trader/GetBalances",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TraderServer).GetBalances(ctx, req.(*BalancesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Trader_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.trader",
	HandlerType: (*TraderServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetBalances",
			Handler:    _Trader_GetBalances_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}

func init() { proto1.RegisterFile("api.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 226 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x64, 0x4f, 0xb1, 0x4e, 0xc3, 0x40,
	0x0c, 0x25, 0x95, 0x9a, 0x52, 0x77, 0x28, 0x3a, 0xa1, 0x12, 0xc1, 0x52, 0x65, 0x62, 0x40, 0x27,
	0x44, 0x07, 0x56, 0x94, 0x05, 0xc4, 0x54, 0x85, 0x81, 0xd9, 0x6d, 0xad, 0x10, 0xc9, 0x17, 0x1f,
	0xe7, 0x43, 0xc0, 0xdf, 0x43, 0x7a, 0xa9, 0x40, 0x30, 0xf9, 0xbd, 0x27, 0xbf, 0xf7, 0x6c, 0x98,
	0xa2, 0x6f, 0xad, 0x0f, 0x12, 0xc5, 0x8c, 0xf7, 0xa3, 0x5c, 0xc1, 0xbc, 0x42, 0xc6, 0x6e, 0x4b,
	0x5a, 0xd3, 0xeb, 0x1b, 0x69, 0x34, 0x4b, 0x98, 0xb5, 0x4d, 0x27, 0x81, 0x9e, 0x1c, 0x32, 0x17,
	0xd9, 0x32, 0xbb, 0x3c, 0xae, 0x7f, 0x4b, 0xe5, 0x2d, 0x4c, 0x06, 0x93, 0x59, 0x40, 0xae, 0x9f,
	0x6e, 0x23, 0x69, 0x6f, 0x5a, 0x0f, 0xcc, 0x9c, 0xc2, 0x38, 0x4a, 0x44, 0x2e, 0x46, 0xdf, 0xf2,
	0xa8, 0x4e, 0xa4, 0xbc, 0x82, 0x93, 0x9f, 0x36, 0xf5, 0xd2, 0x29, 0x99, 0x02, 0x26, 0x8e, 0x54,
	0xb1, 0xa1, 0x21, 0xe2, 0x40, 0x6f, 0x1e, 0x21, 0x8f, 0x01, 0x77, 0x14, 0xcc, 0x1d, 0xcc, 0xee,
	0x29, 0x1e, 0xac, 0x66, 0x91, 0x7e, 0xb0, 0x7f, 0x2e, 0x3f, 0x3f, 0xfb, 0xa7, 0xa7, 0x8e, 0xf2,
	0xa8, 0xba, 0x86, 0x8b, 0x56, 0x6c, 0x13, 0xfc, 0xd6, 0xd2, 0x07, 0x3a, 0xcf, 0xa4, 0xf6, 0x85,
	0x98, 0xe5, 0x5d, 0x02, 0xef, 0xaa, 0xf9, 0x43, 0x8f, 0x9f, 0x7b, 0xbc, 0xee, 0x23, 0xd6, 0xd9,
	0x26, 0xdf, 0x67, 0xad, 0xbe, 0x02, 0x00, 0x00, 0xff, 0xff, 0x49, 0xaa, 0x83, 0x0c, 0x34, 0x01,
	0x00, 0x00,
}
